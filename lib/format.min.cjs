"use strict";
/*!
The MIT License (MIT)
Copyright (c) spurreiter
*/const e={number:{integer:{maximumFractionDigits:0},currency:{style:"currency"},percent:{style:"percent"}},date:{short:{month:"numeric",day:"numeric",year:"2-digit"},medium:{month:"short",day:"numeric",year:"numeric"},long:{month:"long",day:"numeric",year:"numeric"},full:{weekday:"long",month:"long",day:"numeric",year:"numeric"}},time:{short:{hour:"numeric",minute:"numeric",second:void 0},medium:{hour:"numeric",minute:"numeric",second:"numeric"},long:{hour:"numeric",minute:"numeric",second:"numeric",timeZoneName:"short"},full:{hour:"numeric",minute:"numeric",second:"numeric",timeZoneName:"short"}}},r=({part:e,level:r,prop:t,type:n})=>{if((e=>e%2==0)(r))return{str:e,level:r};let[s,o,c]=e.split(",").map((e=>e.trim()));return s?(!o&&n&&(c=s,s=t,o=n),{prop:s,type:o,opts:c,level:r,parts:[]}):{}},t=e=>Math.floor(e/2),n=(e,r,t={})=>e.split(/([a-zA-Z0-9]+(?:\/\S+|))\s/).reduce(((e,t)=>{const[n,s]=t.split("/");return void 0===s?Object.assign(e,r[n]):e[n]=s,e}),{...t});function s(e){let n="",s=0,o=0;const c={},i=[],a={0:i};for(let i=0;i<e.length;i++){const u=e[i];switch(u){case"{":{const e=r({...c[s],part:n,level:s});(e.str||e.prop)&&a[o].push(e),c[s]=e,s+=1,o=t(s),e.parts&&(a[o]=e.parts),n="";break}case"}":{const e=r({...c[s],part:n,level:s});(e.str||e.prop)&&a[o].push(e),s-=1,o=t(s),n="",delete c[s+1];break}default:n+=u}}const u=r({...c[s],part:n,level:s});return(u.str||u.prop)&&a[o].push(u),i}const o=(r,t,s)=>{const c=[];let i;for(let a=0;a<r.length;a++){const{str:u,prop:m,type:p,opts:l="",parts:h}=r[a];if(u)c.push(u);else if(m)if(p){if(i!==p)switch(i=void 0,p){case"number":{const r=Number(t[m]);if(!l){c.push(r);break}const o=n(l,e.number),i=new Intl.NumberFormat(s,o).format(r);c.push(i);break}case"plural":{if(!l)throw new TypeError(`type "${p}" needs a matcher`);const e=Number(t[m]),n=new Intl.PluralRules(s).select(e);if("="===l[0]&&e===Number(l.slice(1))||n===l&&"="!==l[0]||"other"===l){i=p;const r=o(h,t,s).replace("#",""+e);c.push(r)}if(!i&&r[a+1]?.type!==p)throw new TypeError(`type "${p}" needs an "other" match`);break}case"select":if(!l)throw new TypeError(`type "${p}" needs a matcher`);if(t[m]===l||"other"===l){i=p;const e=o(h,t,s);c.push(e)}if(!i&&r[a+1]?.type!==p)throw new TypeError(`type "${p}" needs an "other" match`);break;case"selectordinal":{if(!l)throw new TypeError(`type "${p}" needs a matcher`);const e=Number(t[m]),n=new Intl.PluralRules(s,{type:"ordinal"}).select(e);if("="===l[0]&&e===Number(l.slice(1))||n===l&&"="!==l[0]||"other"===l){i=p;const r=o(h,t,s).replace("#",""+e);c.push(r)}if(!i&&r[a+1]?.type!==p)throw new TypeError(`type "${p}" needs an "other" match`);break}case"date":{const r=t[m],o=n(l,e.date),i=new Intl.DateTimeFormat(s,o).format(r);c.push(i);break}case"time":{const r=t[m],o=n(l,e.time,e.time.medium),i=new Intl.DateTimeFormat(s,o).format(r);c.push(i);break}}}else{const e=String(t[m]??`{${m}}`);c.push(e)}}return c.join("")};exports.format=function(e="",r={},t="en"){if(!e.includes("{"))return e;const n=s(e);return o(n,r,t)},exports.parse=s;
